---------------------------------
---------- 시퀀스 삭제-----------
---------------------------------
DROP SEQUENCE SEQ_MEMBER_NO;

DROP SEQUENCE SEQ_LOCATION_NO;

DROP SEQUENCE SEQ_ORDER_SHOW_NO;
DROP SEQUENCE SEQ_ORDER_LIST_NO;

DROP SEQUENCE SEQ_MERCHANDISE_NO;
DROP SEQUENCE SEQ_MERCHANDISE_CART_NO;

DROP SEQUENCE SEQ_FOOD_NO;
DROP SEQUENCE SEQ_FOOD_CART_NO;

DROP SEQUENCE SEQ_BEVERAGE_NO;
DROP SEQUENCE SEQ_BEVERAGE_CART_NO;



----------------------------------
---------- 테이블 삭제 -----------
----------------------------------
DROP TABLE MEMBER CASCADE CONSTRAINTS;

DROP TABLE LOCATION CASCADE CONSTRAINTS;

DROP TABLE ORDER_SHOW CASCADE CONSTRAINTS;
DROP TABLE ORDER_LIST CASCADE CONSTRAINTS;

DROP TABLE MERCHANDISE CASCADE CONSTRAINTS;
DROP TABLE MD_CATEGORY CASCADE CONSTRAINTS;
DROP TABLE MERCHANDISE_CART CASCADE CONSTRAINTS;


DROP TABLE FOOD CASCADE CONSTRAINTS;
DROP TABLE FOOD_CATEGORY CASCADE CONSTRAINTS;
DROP TABLE FOOD_CART CASCADE CONSTRAINTS;

DROP TABLE BEVERAGE CASCADE CONSTRAINTS;
DROP TABLE BEV_CATEGORY CASCADE CONSTRAINTS;
DROP TABLE BEVERAGE_CART CASCADE CONSTRAINTS;



----------------------------------
---------- 시퀀스 생성 -----------
----------------------------------
CREATE SEQUENCE SEQ_MEMBER_NO NOCACHE NOCYCLE;

CREATE SEQUENCE SEQ_LOCATION_NO NOCACHE NOCYCLE;

CREATE SEQUENCE SEQ_ORDER_SHOW_NO NOCACHE NOCYCLE;
CREATE SEQUENCE SEQ_ORDER_LIST_NO NOCACHE NOCYCLE;

CREATE SEQUENCE SEQ_MERCHANDISE_NO NOCACHE NOCYCLE;
CREATE SEQUENCE SEQ_MERCHANDISE_CART_NO NOCACHE NOCYCLE;

CREATE SEQUENCE SEQ_FOOD_NO NOCACHE NOCYCLE;
CREATE SEQUENCE SEQ_FOOD_CART_NO NOCACHE NOCYCLE;

CREATE SEQUENCE SEQ_BEVERAGE_NO NOCACHE NOCYCLE;
CREATE SEQUENCE SEQ_BEVERAGE_CART_NO NOCACHE NOCYCLE;



----------------------------------
---------- 테이블 생성 -----------
----------------------------------
----- MEMBER -----
CREATE TABLE MEMBER (
    MEMBER_NO               NUMBER              CONSTRAINT PK_MEMBER_NO     PRIMARY KEY
    , ID                    VARCHAR2(100)       CONSTRAINT NN_MEMBER_ID     NOT NULL CONSTRAINT UQ_MEMBER_ID UNIQUE
    , PWD                   VARCHAR2(100)       CONSTRAINT NN_MEMBER_PWD    NOT NULL
    , NICK                  VARCHAR2(100)       CONSTRAINT NN_MEMBER_NICK   NOT NULL
    , PHONE                 CHAR(11)            CONSTRAINT NN_MEMBER_PHONE  NOT NULL
    , MEMBER_ADDRESS        VARCHAR2(2000)      CONSTRAINT NN_MEMBER_MEMBER_ADDRESS NOT NULL
    , MEMBER_DEL_YN         CHAR(1)             DEFAULT 'N' CONSTRAINT CK_MEMBER_QUIT CHECK (MEMBER_DEL_YN IN ('Y','N'))
);

----- LOCATION -----
CREATE TABLE LOCATION (
    LOCATION_NO         NUMBER              CONSTRAINT PK_LOCATION_LOCATION_NO PRIMARY KEY
    , BRANCH_NAME       VARCHAR2(100)       CONSTRAINT NN_LOCATION_BRANCH_NAME NOT NULL CONSTRAINT UQ_LOCATION_BRANCH_NAME UNIQUE
    , LOCATION_ADDRESS  VARCHAR2(2000)      CONSTRAINT NN_LOCATION_LOCATION_ADDRESS NOT NULL
    , DISTANCE          CHAR(10)            CONSTRAINT NN_LOCATION_DISTANCE NOT NULL
    , TELEPHONE         CHAR(11)            CONSTRAINT NN_LOCATION_TELEPHONE NOT NULL
    , LOCATION_DEL_YN   CHAR(1)             DEFAULT 'N' CONSTRAINT CK_LOCATION_DEL_YN CHECK (LOCATION_DEL_YN IN ('Y','N'))
    , LOCATION_EXPO_YN  CHAR(1)             DEFAULT 'Y' CONSTRAINT CK_LOCATION_EXPO_YN CHECK (LOCATION_EXPO_YN IN ('Y','N'))
);

----- ORDER -----
CREATE TABLE ORDER_SHOW (
    ORDER_NO        NUMBER                  CONSTRAINT PK_ORDER_SHOW_ORDER_NO PRIMARY KEY
    , MEMBER_NO     NUMBER                  CONSTRAINT NN_ORDER_SHOW_MEMBER_NO NOT NULL
    , LOCATION_NO   NUMBER                  CONSTRAINT NN_ORDER_SHOW_LOCATION_NO NOT NULL
);

CREATE TABLE ORDER_LIST (
    ORDER_LIST_NO   NUMBER                  CONSTRAINT PK_ORDER_LIST_ORDER_LIST_NO PRIMARY KEY
    , ORDER_NO      NUMBER                  CONSTRAINT NN_ORDER_LIST_ORDER_NO NOT NULL
);

----- MERCHANDISE -----
CREATE TABLE MERCHANDISE (
    MD_NO           NUMBER                  CONSTRAINT PK_MERCHANDISE_MD_NO PRIMARY KEY
    , MD_CODE       NUMBER                  CONSTRAINT NN_MERCHANDISE_MD_CODE NOT NULL
    , MD_NAME       VARCHAR2(100)           CONSTRAINT NN_MERCHANDISE_MD_NAME NOT NULL CONSTRAINT UQ_MERCHANDISE_MD_NAME UNIQUE
    , MD_PRICE      NUMBER                  CONSTRAINT NN_MERCHANDISE_MD_PRICE NOT NULL
    , CAPACITY      CHAR(10)
    , MD_DEL_YN     CHAR(1)                 DEFAULT 'N' CONSTRAINT CK_MERCHANDISE_MD_DEL_YN CHECK (MD_DEL_YN IN ('Y','N'))
    , MD_EXPO_YN    CHAR(1)                 DEFAULT 'Y' CONSTRAINT CK_MERCHANDISE_MD_EXPO_YN CHECK (MD_EXPO_YN IN ('Y','N'))
    , MD_STOCK      NUMBER                  CONSTRAINT NN_MERCHANDISE_MD_STOCK NOT NULL
);

CREATE TABLE MD_CATEGORY (
    MD_CODE         NUMBER                  CONSTRAINT PK_MD_CATEGORY_MD_CODE PRIMARY KEY
   , MD_CATEGORY    VARCHAR2(255)           CONSTRAINT NN_MD_CATEGORY_MD_CATEGORY NOT NULL
);

CREATE TABLE MERCHANDISE_CART (
    MERCHANDISE_CART_NO     NUMBER          CONSTRAINT PK_MERCHANDISE_CART_MERCHANDISE_CART_NO PRIMARY KEY
   , MEMBER_NO              NUMBER          CONSTRAINT NN_MERCHANDISE_CART_MEMBER_NO NOT NULL
   , MD_NO                  NUMBER          CONSTRAINT NN_MERCHANDISE_CART_MD_NO NOT NULL
   , MD_COUNT               CHAR(5)         CONSTRAINT NN_MERCHANDISE_CART_MD_COUNT NOT NULL
   , MD_SUM                 NUMBER          CONSTRAINT NN_MERCHANDISE_CART_MD_SUM NOT NULL
   , MD_REQUEST             VARCHAR2(4000)
);

----- FOOD -----
CREATE TABLE FOOD (
    FOOD_NO      	NUMBER		    CONSTRAINT PK_FOOD_NO PRIMARY KEY
    , FOOD_NAME    	VARCHAR2(100)	CONSTRAINT NN_FOOD_NAME NOT NULL CONSTRAINT UQ_FOOD_NAME UNIQUE
    , FOOD_PRICE	NUMBER		    CONSTRAINT NN_FOOD_PRICE NOT NULL
    , HEAT_YN	    CHAR(1)		    DEFAULT 'N' CONSTRAINT CK_FOOD_HEAT CHECK (HEAT_YN IN('Y','N'))
    , FOOD_DEL_YN	CHAR(1)		    DEFAULT 'N' CONSTRAINT CK_FOOD_DELETE CHECK (FOOD_DEL_YN IN('Y','N'))
    , FOOD_EXPO_YN	CHAR(1)		    DEFAULT 'Y' CONSTRAINT CK_FOOD_EXPOSE CHECK (FOOD_EXPO_YN IN('Y','N'))
    , FOOD_CODE	    NUMBER		    CONSTRAINT NN_FOOD_CODE NOT NULL
    , FOOD_STOCK	NUMBER
);
CREATE TABLE FOOD_CATEGORY (
	FOOD_CODE           NUMBER		    CONSTRAINT PK_FOOD_CODE PRIMARY KEY
    , FOOD_CATEGORY     VARCHAR2(255)	CONSTRAINT NN_FOOD_CATEGORY NOT NULL
);
CREATE TABLE FOOD_CART (
	FOOD_CART_NO	NUMBER	CONSTRAINT PK_FOOD_CART_NO PRIMARY KEY
    , MEMBER_NO	    NUMBER	CONSTRAINT NN_MEMBER_NO_FOOD NOT NULL
    , FOOD_NO	    NUMBER	CONSTRAINT NN_FOOD_NO NOT NULL
    , FOOD_COUNT	    CHAR(5)	CONSTRAINT NN_FOOD_COUNT NOT NULL
    , FOOD_SUM	    NUMBER	CONSTRAINT NN_FOOD_SUM NOT NULL
    , FOOD_REQUEST	VARCHAR2(4000)	NOT NULL
);
----- BEVERAGE -----
CREATE TABLE BEVERAGE (
	BEV_NO      	NUMBER		    CONSTRAINT PK_BEV_NO PRIMARY KEY
    ,BEV_NAME    	VARCHAR2(100)	CONSTRAINT NN_BEV_NAME NOT NULL UNIQUE
    ,BEV_PRICE	    NUMBER		    CONSTRAINT NN_BEV_PRICE NOT NULL
    ,ICED_HOT	    CHAR(1)		    DEFAULT 'I' CONSTRAINT CK_BEV_ICED CHECK (ICED_HOT IN('I','H'))
    ,BEV_DEL_YN	    CHAR(1)		    DEFAULT 'N' CONSTRAINT CK_BEV_DELETE CHECK (BEV_DEL_YN IN('Y','N'))
    ,BEV_EXPO_YN	CHAR(1)		    DEFAULT 'Y' CONSTRAINT CK_BEV_EXPOSE CHECK (BEV_EXPO_YN IN('Y','N'))
    ,BEV_CODE	    NUMBER		    CONSTRAINT NN_BEV_CODE NOT NULL
    ,BEV_STOCK      NUMBER	        NOT NULL
);

CREATE TABLE BEV_CATEGORY (
	BEV_CODE	    NUMBER		    CONSTRAINT PK_BEV_CODE PRIMARY KEY
    , BEV_CATEGORY	VARCHAR2(255)	CONSTRAINT NN_BEV_CATEGORY NOT NULL
);

CREATE TABLE BEVERAGE_CART (
	BEVERAGE_CART_NO	NUMBER	CONSTRAINT PK_BEVERAGE_CART_NO PRIMARY KEY
    , MEMBER_NO	        NUMBER	CONSTRAINT NN_BEV_CART_MEMBER_NO NOT NULL
    , BEV_NO	        NUMBER	CONSTRAINT NN_BEV_NO NOT NULL
    , BEV_COUNT	        CHAR(5) CONSTRAINT NN_BEV_COUNT NOT NULL
    , BEV_SUM	        NUMBER	CONSTRAINT NN_BEV_SUM NOT NULL
    , BEV_REQUEST	    VARCHAR2(4000)
);



----------------------------------
---------- 외래키 추가 -----------
----------------------------------
----- ORDER_SHOW, ORDER_LIST -----
ALTER TABLE ORDER_SHOW
ADD CONSTRAINT FK_ORDER_SHOW_MEMBER
FOREIGN KEY (MEMBER_NO) REFERENCES MEMBER(MEMBER_NO);

ALTER TABLE ORDER_LIST
ADD CONSTRAINT FK_ORDER_LIST_ORDER_SHOW
FOREIGN KEY (ORDER_NO) REFERENCES ORDER_SHOW(ORDER_NO);

ALTER TABLE ORDER_SHOW
ADD CONSTRAINT FK_ORDER_SHOW_LOCATION
FOREIGN KEY (LOCATION_NO) REFERENCES LOCATION(LOCATION_NO);

----- MD, MD_CATEGORY, MD_CART -----
ALTER TABLE MERCHANDISE
ADD CONSTRAINT FK_MERCHANDISE_MD_CATEGORY
FOREIGN KEY (MD_CODE) REFERENCES MD_CATEGORY(MD_CODE);

ALTER TABLE MERCHANDISE_CART
ADD CONSTRAINT FK_MERCHANDISE_CART_MERCHANDISE
FOREIGN KEY (MD_NO) REFERENCES MERCHANDISE(MD_NO);

ALTER TABLE MERCHANDISE_CART
ADD CONSTRAINT FK_MERCHANDISE_CART_MEMBER
FOREIGN KEY (MEMBER_NO) REFERENCES MEMBER(MEMBER_NO);

----- FOOD, FOOD_CATEGORY, FOOD_CART -----
ALTER TABLE FOOD_CART
ADD CONSTRAINT FK_FOOD_CART_MEMBER
FOREIGN KEY (MEMBER_NO) REFERENCES MEMBER(MEMBER_NO);

ALTER TABLE FOOD_CART
ADD CONSTRAINT FK_FOOD_CART_FOOD
FOREIGN KEY (FOOD_NO) REFERENCES FOOD(FOOD_NO);

ALTER TABLE FOOD
ADD CONSTRAINT FK_FOOD_FOOD_CATEGORY
FOREIGN KEY (FOOD_CODE) REFERENCES FOOD_CATEGORY(FOOD_CODE);

----- BEV, BEV_CATEGORY, BEV_CART -----
ALTER TABLE BEVERAGE_CART
ADD CONSTRAINT FK_BEVERAGE_CART_MEMBER
FOREIGN KEY (MEMBER_NO) REFERENCES MEMBER(MEMBER_NO);

ALTER TABLE BEVERAGE_CART
ADD CONSTRAINT FK_BEVERAGE_CART_BEVERAGE
FOREIGN KEY (BEV_NO) REFERENCES BEVERAGE(BEV_NO);

ALTER TABLE BEVERAGE
ADD CONSTRAINT FK_BEVERAGE_BEV_CATEGORY
FOREIGN KEY (BEV_CODE) REFERENCES BEV_CATEGORY(BEV_CODE);
